name: Prebuild

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  prebuild-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libsimdjson-dev libomp-dev
          npm ci
      
      - name: Build for Linux ${{ matrix.arch }}
        run: |
          npx prebuildify --napi --strip --arch=${{ matrix.arch }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-linux-${{ matrix.arch }}
          path: prebuilds/

  prebuild-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          brew install simdjson libomp
          npm ci
      
      - name: Build for macOS ${{ matrix.arch }}
        run: |
          npx prebuildify --napi --strip --arch=${{ matrix.arch }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-macos-${{ matrix.arch }}
          path: prebuilds/

  prebuild-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Install dependencies
        run: |
          # Install vcpkg for simdjson
          git clone https://github.com/Microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
          C:\vcpkg\vcpkg install simdjson:x64-windows
          npm ci
      
      - name: Build for Windows ${{ matrix.arch }}
        run: |
          $env:VCPKG_ROOT = "C:\vcpkg"
          npx prebuildify --napi --strip --arch=${{ matrix.arch }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: prebuilds-windows-${{ matrix.arch }}
          path: prebuilds/

  package:
    needs: [prebuild-linux, prebuild-macos, prebuild-windows]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: prebuilds-*
          merge-multiple: true
          path: prebuilds/
      
      - name: List prebuilds
        run: find prebuilds -type f -name "*.node" | sort
      
      - name: Package for release
        run: |
          tar -czf prebuilds.tar.gz prebuilds/
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: prebuilds.tar.gz
          draft: false
          prerelease: false